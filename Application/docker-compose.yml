version: '4.22.1'
services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
    user: "0"
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        elif [ x${KIBANA_PASSWORD} == x ]; then
          echo "Set the KIBANA_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        echo "Waiting for Elasticsearch availability";
        until curl -s http://es01:9200 | grep -q "cluster_name"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST -H "Content-Type: application/json" http://es01:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    healthcheck:
      test: ["CMD", "curl", "-s", "http://es01:9200"]
      interval: 10s
      retries: 120
    networks:
      - mynetwork

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
    environment:
      - node.name=es01
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - mynetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:8.1.2
    ports:
      - "5601:5601"
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    networks:
      - mynetwork
  
  webscrapping01:
    build:
      context: .
      dockerfile: dockerfile01
    volumes:
      - ./output:/app/output
    environment:
      - DOCKER_ENV=True
    networks:
      - mynetwork

  webscrapping02:
    build:
      context: .
      dockerfile: dockerfile02
    volumes:
      - ./output:/app/output
    environment:
      - DOCKER_ENV=True
    networks:
      - mynetwork

  transformation:
    build:
      context: .
      dockerfile: dockerfile03
    depends_on:
      - webscrapping01
      - webscrapping02
    volumes:
      - ./output:/app/output
    environment:
      - DOCKER_ENV=True
    networks:
      - mynetwork

  import_to_elasticsearch:
    build:
      context: .
      dockerfile: dockerfile04
    depends_on:
      - transformation
      - setup
    environment:
      - ELASTICSEARCH_HOST=es01
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=<your_password>
      - DOCKER_ENV=True
    volumes:
      - .:/app
    networks:
      - mynetwork

  sentiment_anaysis:
    build:
      context: .
      dockerfile: dockerfile05
    depends_on:
      - setup
    environment:
      - ELASTICSEARCH_HOST=es01
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=<your_password>
      - DOCKER_ENV=True
    volumes:
      - ./output:/app/output
    networks:
      - mynetwork

  dashboard:
    build:
      context: .
      dockerfile: dockerfile06
    depends_on:
      - sentiment_anaysis
    ports:
      - "8050:8050"
    volumes:
      - ./output:/app/output
    environment:
      - DOCKER_ENV=True
    networks:
      - mynetwork

volumes:

  webscrapping01:   
  webscrapping02:   
  import_to_elasticsearch:
  transformation:
  sentiment_anaysis:
  dashboard:

networks:
  mynetwork:
    driver: bridge
